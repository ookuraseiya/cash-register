import { AddItems } from './AddItems';
import { IncomeExpenses } from './IncomeExpenses';
import React, { useEffect, createContext, useState } from 'react';
import { ItemsList } from './ItemsList';
import { Total } from './Total';
import { IncomeTotal } from './IncomeTotal';
import { ExpenseTotal } from './ExpenseTotal';

export const UserCount = createContext();

// ドット三つ→{...props}の...の部分。(ワンちゃんスプレッド構文)
//   setIncomeItem([...incomeItem, { incomes }]); ←スプレッド構文という
export const Home = () => {
  // let incomeArray_text = [];
  // let incomeArray_number = [];
  // let expenseArray_text = [];
  // let expenseArray_number = [];
  const [incomeArray_text, setIncomeArray_text] = useState([]);
  const [incomeArray_number, setIncomeArray_number] = useState([]);
  const [expenseArray_text, setExpenseArray_text] = useState([]);
  const [expenseArray_number, setExpenseArray_number] = useState([]);

  const [value, setValue] = useState('income');
  const [inputText, setInputText] = useState('');
  const [inputNumber, setInputNumber] = useState('');
  const [incomeItem, setIncomeItem] = useState([]);
  const [expenseItem, setExpenseItem] = useState([]);

  const addIncome = (inputText, inputNumber) => {
    setIncomeItem([...incomeItem, { text: inputText, number: inputNumber }]);
  };

  console.log(incomeItem);

  // setIncomeArray_text(incomeItem.map((item) => item.text));
  // setIncomeArray_number(incomeItem.map((item) => item.number));
  // console.log(incomeArray_number);

  const totalIncome = IncomeTotal(incomeItem);

  const addExpense = (inputText, inputNumber) => {
    setExpenseItem([...expenseItem, { text: inputText, number: inputNumber }]);
  };

  // setExpenseArray_text(expenseItem.map((item) => item.text));
  // setExpenseArray_number(expenseItem.map((item) => item.number));

  const totalExpense = ExpenseTotal(expenseItem);

  // useEffectよくわかんねえ
  useEffect(() => {
    setIncomeArray_text(incomeItem.map((item) => item.text));
    setIncomeArray_number(incomeItem.map((item) => item.number));
    setExpenseArray_text(expenseItem.map((item) => item.text));
    setExpenseArray_number(expenseItem.map((item) => item.number));
  }, [incomeItem, expenseItem]);

  return (
    <div className="Home">
      <div className="Home-top"></div>
      <div className="Home-bottom">
        <Total totalIncome={totalIncome} totalExpense={totalExpense} />
        <IncomeExpenses totalIncome={totalIncome} totalExpense={totalExpense} />
        <AddItems
          addIncome={addIncome}
          addExpense={addExpense}
          value={value}
          setValue={setValue}
          inputText={inputText}
          setInputText={setInputText}
          inputNumber={inputNumber}
          setInputNumber={setInputNumber}
        />
        <UserCount.Provider
          value={{
            incomeArray_text,
            setIncomeArray_text,
            incomeArray_number,
            setIncomeArray_number,
            expenseArray_text,
            setExpenseArray_text,
            expenseArray_number,
            setExpenseArray_number,
          }}
        >
          <ItemsList />
        </UserCount.Provider>
      </div>
    </div>
  );
};
